<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="SearchTests" tests="1" skipped="0" failures="1" errors="0" timestamp="2023-09-21T11:07:51" hostname="DESKTOP-2D272JQ" time="15.51">
  <properties/>
  <testcase name="successfulSearchTest()" classname="SearchTests" time="15.51">
    <failure message="Element should have text &quot;https://selenide.org&quot; {[id=search]}&#13;&#10;Element: '&lt;div id=&quot;search&quot;&gt;Результаты поиска&#10;Веб-результат со ссылками на сайт&#10;&#10;Selenide: лаконичные и стабильные UI тесты на Java&#10;Selenide&#10;https://ru.selenide.org&#10;Selenide - это фреймворк для автоматизированного тестирования веб-приложений на основе Selenium WebDriver, дающий следующие преимущества: ... Вам больше не нужно ...&#10;С чего начать?&#10;Просто добавь в проект selenide.jar (и его зависимости) и ...&#10;Селенид поддерживает ...&#10;Какие преимущества даёт Selenide по сравнению с ...&#10;Док&#10;shouldHave(text(&quot;Привет&quot;));. Используй мощь IDE! Весь ...&#10;Quick Start&#10;Just add selenide.jar (and its dependencies) to your project ...&#10;Другие результаты с сайта selenide.org »&#10;&#10;Selenide - Concise UI Tests with Java!&#10;GitHub&#10;https://github.com › selenide&#10;·&#10;Перевести эту страницу&#10;Selenide is a framework for writing easy-to-read and easy-to-maintain automated tests in Java. It defines concise fluent API, natural language assertions and ...&#10;&#10;Selenide vs Selenium — подробное сравнение / Хабр&#10;Habr&#10;https://habr.com › companies › otus › articles&#10;16 февр. 2022 г. — Selenide — это автоматизированная система тестирования программного обеспечения, используемая для написания программных кодов, которая помогает ...&#10;Ещё вопросы&#10;Зачем нужен Selenide?&#10;&#10;Что такое Selenoid?&#10;&#10;Чем отличается селен от Селениума?&#10;&#10;В чем разница между Selenium IDE и WebDriver ом?&#10;&#10;Оставить отзыв&#10;&#10;Эффективные UI-тесты на Selenide / Хабр&#10;Habr&#10;https://habr.com › articles&#10;25 дек. 2015 г. — Selenide — это библиотека для написания лаконичных и стабильных UI тестов с открытым исходным кодом. Selenide — идеальный выбор для ...&#10;&#10;Автотесты с нуля Selenide Java&#10;YouTube&#10;https://www.youtube.com › watch&#10;6 окт. 2021 г. — В этом видео я разобрал тест кейс подписчика, создав проект с нуля, используя Java, Selenide, Junit Boosty - https://boosty.to/threadqa ...&#10;&#10;Introduction to Selenide&#10;Baeldung&#10;https://www.baeldung.com › ...&#10;·&#10;Перевести эту страницу&#10;17 авг. 2023 г. — Selenide is a free, open-source framework built on top of Selenium WebDriver. It gives us access to all of the power of Selenium for performing ...&#10;&#10;Пишем автотесты для UI на базе Selenide. Часть 2&#10;Test IT&#10;https://testit.software › blog › post › pishem-avtotesty-...&#10;5 янв. 2022 г. — Selenide – это фреймворк для автоматизированного тестирования веб-приложений на основе Selenium WebDriver. Создайте пустой проект с названием “ ...&#10;&#10;Selenide: как тестировать веб-элементы&#10;ithillel.ua&#10;https://blog.ithillel.ua › Блог › Видео&#10;1:31:37&#10;Selenide — это фреймворк для автоматизации UI-тестирования на Java. Кроме того, одной из основных целей использования Selenide является ...&#10;Hillel IT School · 12 авг. 2022 г.&lt;/div&gt;'&#13;&#10;Actual value: text=&quot;Результаты поиска&#10;Веб-результат со ссылками на сайт&#10;&#10;Selenide: лаконичные и стабильные UI тесты на Java&#10;Selenide&#10;https://ru.selenide.org&#10;Selenide - это фреймворк для автоматизированного тестирования веб-приложений на основе Selenium WebDriver, дающий следующие преимущества: ... Вам больше не нужно ...&#10;С чего начать?&#10;Просто добавь в проект selenide.jar (и его зависимости) и ...&#10;Селенид поддерживает ...&#10;Какие преимущества даёт Selenide по сравнению с ...&#10;Док&#10;shouldHave(text(&quot;Привет&quot;));. Используй мощь IDE! Весь ...&#10;Quick Start&#10;Just add selenide.jar (and its dependencies) to your project ...&#10;Другие результаты с сайта selenide.org »&#10;&#10;Selenide - Concise UI Tests with Java!&#10;GitHub&#10;https://github.com › selenide&#10;·&#10;Перевести эту страницу&#10;Selenide is a framework for writing easy-to-read and easy-to-maintain automated tests in Java. It defines concise fluent API, natural language assertions and ...&#10;&#10;Selenide vs Selenium — подробное сравнение / Хабр&#10;Habr&#10;https://habr.com › companies › otus › articles&#10;16 февр. 2022 г. — Selenide — это автоматизированная система тестирования программного обеспечения, используемая для написания программных кодов, которая помогает ...&#10;Ещё вопросы&#10;Зачем нужен Selenide?&#10;&#10;Что такое Selenoid?&#10;&#10;Чем отличается селен от Селениума?&#10;&#10;В чем разница между Selenium IDE и WebDriver ом?&#10;&#10;Оставить отзыв&#10;&#10;Эффективные UI-тесты на Selenide / Хабр&#10;Habr&#10;https://habr.com › articles&#10;25 дек. 2015 г. — Selenide — это библиотека для написания лаконичных и стабильных UI тестов с открытым исходным кодом. Selenide — идеальный выбор для ...&#10;&#10;Автотесты с нуля Selenide Java&#10;YouTube&#10;https://www.youtube.com › watch&#10;6 окт. 2021 г. — В этом видео я разобрал тест кейс подписчика, создав проект с нуля, используя Java, Selenide, Junit Boosty - https://boosty.to/threadqa ...&#10;&#10;Introduction to Selenide&#10;Baeldung&#10;https://www.baeldung.com › ...&#10;·&#10;Перевести эту страницу&#10;17 авг. 2023 г. — Selenide is a free, open-source framework built on top of Selenium WebDriver. It gives us access to all of the power of Selenium for performing ...&#10;&#10;Пишем автотесты для UI на базе Selenide. Часть 2&#10;Test IT&#10;https://testit.software › blog › post › pishem-avtotesty-...&#10;5 янв. 2022 г. — Selenide – это фреймворк для автоматизированного тестирования веб-приложений на основе Selenium WebDriver. Создайте пустой проект с названием “ ...&#10;&#10;Selenide: как тестировать веб-элементы&#10;ithillel.ua&#10;https://blog.ithillel.ua › Блог › Видео&#10;1:31:37&#10;Selenide — это фреймворк для автоматизации UI-тестирования на Java. Кроме того, одной из основных целей использования Selenide является ...&#10;Hillel IT School · 12 авг. 2022 г.&quot;&#13;&#10;Screenshot: file:/C:/Users/quantum/Desktop/getting-started/build/reports/tests/1695294486569.0.png&#13;&#10;Page source: file:/C:/Users/quantum/Desktop/getting-started/build/reports/tests/1695294486569.0.html&#13;&#10;Timeout: 4 s." type="com.codeborne.selenide.ex.ElementShould">Element should have text &quot;https://selenide.org&quot; {[id=search]}
Element: '&lt;div id=&quot;search&quot;&gt;Результаты поиска
Веб-результат со ссылками на сайт

Selenide: лаконичные и стабильные UI тесты на Java
Selenide
https://ru.selenide.org
Selenide - это фреймворк для автоматизированного тестирования веб-приложений на основе Selenium WebDriver, дающий следующие преимущества: ... Вам больше не нужно ...
С чего начать?
Просто добавь в проект selenide.jar (и его зависимости) и ...
Селенид поддерживает ...
Какие преимущества даёт Selenide по сравнению с ...
Док
shouldHave(text(&quot;Привет&quot;));. Используй мощь IDE! Весь ...
Quick Start
Just add selenide.jar (and its dependencies) to your project ...
Другие результаты с сайта selenide.org »

Selenide - Concise UI Tests with Java!
GitHub
https://github.com › selenide
·
Перевести эту страницу
Selenide is a framework for writing easy-to-read and easy-to-maintain automated tests in Java. It defines concise fluent API, natural language assertions and ...

Selenide vs Selenium — подробное сравнение / Хабр
Habr
https://habr.com › companies › otus › articles
16 февр. 2022 г. — Selenide — это автоматизированная система тестирования программного обеспечения, используемая для написания программных кодов, которая помогает ...
Ещё вопросы
Зачем нужен Selenide?

Что такое Selenoid?

Чем отличается селен от Селениума?

В чем разница между Selenium IDE и WebDriver ом?

Оставить отзыв

Эффективные UI-тесты на Selenide / Хабр
Habr
https://habr.com › articles
25 дек. 2015 г. — Selenide — это библиотека для написания лаконичных и стабильных UI тестов с открытым исходным кодом. Selenide — идеальный выбор для ...

Автотесты с нуля Selenide Java
YouTube
https://www.youtube.com › watch
6 окт. 2021 г. — В этом видео я разобрал тест кейс подписчика, создав проект с нуля, используя Java, Selenide, Junit Boosty - https://boosty.to/threadqa ...

Introduction to Selenide
Baeldung
https://www.baeldung.com › ...
·
Перевести эту страницу
17 авг. 2023 г. — Selenide is a free, open-source framework built on top of Selenium WebDriver. It gives us access to all of the power of Selenium for performing ...

Пишем автотесты для UI на базе Selenide. Часть 2
Test IT
https://testit.software › blog › post › pishem-avtotesty-...
5 янв. 2022 г. — Selenide – это фреймворк для автоматизированного тестирования веб-приложений на основе Selenium WebDriver. Создайте пустой проект с названием “ ...

Selenide: как тестировать веб-элементы
ithillel.ua
https://blog.ithillel.ua › Блог › Видео
1:31:37
Selenide — это фреймворк для автоматизации UI-тестирования на Java. Кроме того, одной из основных целей использования Selenide является ...
Hillel IT School · 12 авг. 2022 г.&lt;/div&gt;'
Actual value: text=&quot;Результаты поиска
Веб-результат со ссылками на сайт

Selenide: лаконичные и стабильные UI тесты на Java
Selenide
https://ru.selenide.org
Selenide - это фреймворк для автоматизированного тестирования веб-приложений на основе Selenium WebDriver, дающий следующие преимущества: ... Вам больше не нужно ...
С чего начать?
Просто добавь в проект selenide.jar (и его зависимости) и ...
Селенид поддерживает ...
Какие преимущества даёт Selenide по сравнению с ...
Док
shouldHave(text(&quot;Привет&quot;));. Используй мощь IDE! Весь ...
Quick Start
Just add selenide.jar (and its dependencies) to your project ...
Другие результаты с сайта selenide.org »

Selenide - Concise UI Tests with Java!
GitHub
https://github.com › selenide
·
Перевести эту страницу
Selenide is a framework for writing easy-to-read and easy-to-maintain automated tests in Java. It defines concise fluent API, natural language assertions and ...

Selenide vs Selenium — подробное сравнение / Хабр
Habr
https://habr.com › companies › otus › articles
16 февр. 2022 г. — Selenide — это автоматизированная система тестирования программного обеспечения, используемая для написания программных кодов, которая помогает ...
Ещё вопросы
Зачем нужен Selenide?

Что такое Selenoid?

Чем отличается селен от Селениума?

В чем разница между Selenium IDE и WebDriver ом?

Оставить отзыв

Эффективные UI-тесты на Selenide / Хабр
Habr
https://habr.com › articles
25 дек. 2015 г. — Selenide — это библиотека для написания лаконичных и стабильных UI тестов с открытым исходным кодом. Selenide — идеальный выбор для ...

Автотесты с нуля Selenide Java
YouTube
https://www.youtube.com › watch
6 окт. 2021 г. — В этом видео я разобрал тест кейс подписчика, создав проект с нуля, используя Java, Selenide, Junit Boosty - https://boosty.to/threadqa ...

Introduction to Selenide
Baeldung
https://www.baeldung.com › ...
·
Перевести эту страницу
17 авг. 2023 г. — Selenide is a free, open-source framework built on top of Selenium WebDriver. It gives us access to all of the power of Selenium for performing ...

Пишем автотесты для UI на базе Selenide. Часть 2
Test IT
https://testit.software › blog › post › pishem-avtotesty-...
5 янв. 2022 г. — Selenide – это фреймворк для автоматизированного тестирования веб-приложений на основе Selenium WebDriver. Создайте пустой проект с названием “ ...

Selenide: как тестировать веб-элементы
ithillel.ua
https://blog.ithillel.ua › Блог › Видео
1:31:37
Selenide — это фреймворк для автоматизации UI-тестирования на Java. Кроме того, одной из основных целей использования Selenide является ...
Hillel IT School · 12 авг. 2022 г.&quot;
Screenshot: file:/C:/Users/quantum/Desktop/getting-started/build/reports/tests/1695294486569.0.png
Page source: file:/C:/Users/quantum/Desktop/getting-started/build/reports/tests/1695294486569.0.html
Timeout: 4 s.
	at app//com.codeborne.selenide.impl.WebElementSource.handleError(WebElementSource.java:149)
	at app//com.codeborne.selenide.impl.WebElementSource.checkConditionAndReturnElement(WebElementSource.java:127)
	at app//com.codeborne.selenide.impl.WebElementSource.checkCondition(WebElementSource.java:104)
	at app//com.codeborne.selenide.commands.Should.execute(Should.java:30)
	at app//com.codeborne.selenide.commands.Should.execute(Should.java:14)
	at app//com.codeborne.selenide.commands.Commands.execute(Commands.java:162)
	at app//com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:132)
	at app//com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:84)
	at app//com.sun.proxy.$Proxy16.shouldHave(Unknown Source)
	at app//SearchTests.successfulSearchTest(SearchTests.java:12)
	at java.base@11.0.19/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.19/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.19/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.19/java.lang.reflect.Method.invoke(Method.java:566)
	at app//org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727)
	at app//org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at app//org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at app//org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at app//org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at app//org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.19/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base@11.0.19/java.util.ArrayList.forEach(ArrayList.java:1541)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at app//org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at app//org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at app//org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at app//org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at app//org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at app//org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at app//org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at app//org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:110)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:90)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:85)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:62)
	at java.base@11.0.19/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@11.0.19/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base@11.0.19/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@11.0.19/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:113)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:65)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
</failure>
  </testcase>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
сент. 21, 2023 1:07:57 PM org.openqa.selenium.remote.service.DriverService$Builder getLogOutput
INFO: Driver logs no longer sent to console by default; https://www.selenium.dev/documentation/webdriver/drivers/service/#setting-log-output
сент. 21, 2023 1:07:59 PM org.openqa.selenium.devtools.CdpVersionFinder findNearestMatch
WARNING: Unable to find an exact match for CDP version 117, so returning the closest version found: 114
]]></system-err>
</testsuite>
